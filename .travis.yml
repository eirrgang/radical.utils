language: python
python: "3.5"

os:
  - linux

env:
  global:
    - CODECOV_TOKEN="18d4cc7a-d35c-44ec-9684-e6f2ec7702fc"
    - LOG=`git log -n 1 | grep Merge`
    - OLD=`echo $LOG | cut -d ' ' -f2`
    - NEW=`echo $LOG | cut -d ' ' -f3`
    - DIFF=`git diff --name-only --diff-filter=b $OLD...$NEW`
    - DIFF=$(echo $DIFF | grep -o -e '\b[^ ]*.py\b')
    - PYTEST="coverage run -m pytest -ra --timeout=600 -vvv --showlocals"
    - PEP8="pycodestyle --config=.pep8 --statistics --format=pylint"
    - FLAKE8="flake8    --config=.pep8 --statistics --format=pylint"
    - PYLINT="pylint    --rcfile=.pylintrc"
    - CMD_PYTEST="$PYTEST tests/"
    - CMD_PEP8="test -z \"$DIFF\" && echo 'nothing to pep8' || $PEP8 $DIFF"
    - CMD_FLAKE8="test -z \"$DIFF\" && echo 'nothing to flake8' || $FLAKE8 $DIFF"
    - CMD_PYLINT="test -z \"$DIFF\" && echo 'nothing to pylint' || $PYLINT $DIFF"
    - CMD_PEP8_TESTS="$PEP8 tests/"
    - CMD_FLAKE8_TESTS="$FLAKE8 tests/"
    - CMD_PYLINT_TESTS="$PYLINT tests/"
    - COVERAGE=false
  matrix:
    - MAIN_CMD=$CMD_PYTEST COVERAGE=true
    - MAIN_CMD=$CMD_PEP8
    - MAIN_CMD=$CMD_FLAKE8
    - MAIN_CMD=$CMD_PYLINT
    - MAIN_CMD=$CMD_PEP8_TESTS
    - MAIN_CMD=$CMD_FLAKE8_TESTS
    - MAIN_CMD=$CMD_PYLINT_TESTS

before_install:
  - uname -a
  - ulimit -a
  - python -V
  - ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa
  - cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
  - echo "Host localhost" >> /home/travis/.ssh/config
  - echo "  StrictHostKeyChecking no" >> /home/travis/.ssh/config
  - chmod g-rw,o-rw /home/travis/.ssh/*
  - ssh localhost hostname
  - ssh localhost uname -a

# command to install dependencies
install:
  - pip install .
  - pip install coverage
  - pip install flake8
  - pip install flake8-per-file-ignores
  - pip install pycodestyle
  - pip install pylint
  - pip install codecov
  - pip install pytest
  - pip install pytest-timeout

before_script:
  - LOC=/home/travis/virtualenv/python3.5  # Location where VE is created on travis
# - sed -i 's|VENV|'"$LOC"'|g' .coveragerc  # Update source in coveragerc
# - cat .coveragerc

script:
  - echo $MAIN_CMD
  - eval $MAIN_CMD

after_success:
  - |
    if [[ $COVERAGE == 'true' ]]; then \
      coverage combine; \
      coverage xml; \
      coverage report; \
      curl -s https://codecov.io/bash | bash
    fi


